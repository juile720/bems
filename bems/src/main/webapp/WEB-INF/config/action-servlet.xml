<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd 
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<context:component-scan base-package="com.ean" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<bean class="com.ean.resolver.CustomMapArgumentResolver"></bean>		
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean id="loggerInterceptor" class="com.ean.logger.LoggerInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

	<aop:aspectj-autoproxy/>
	<bean id="loggerAspect" class="com.ean.logger.LoggerAspect" />
	
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
 
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0" />
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />    

    <bean
    	class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1" 
    	p:viewClass="org.springframework.web.servlet.view.JstlView" 
    	p:prefix="/WEB-INF/jsp/" p:suffix=".jsp">
   	</bean>
<!-- 1. Cron 대상이 되는 클래스 정의
	<bean id="cronQuartz" class="org.springframework.scheduling.quartz.JobDetailBean">
	    <property name="jobClass" value="com.ean.quartz.CronQuartz"/>
	</bean>
	
	2. Cron 시간 설정
	<bean id="cronTrigger1" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="cronQuartz"/>
 	    <property name="cronExpression" value="0 0/15 * * * ?"/>  
	</bean>
	3. Cron 실행
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	    <property name="triggers">
	        <list>
	            <ref bean="cronTrigger1"/>
	        </list>
	    </property>
	    <property name="quartzProperties">
	        <props>
	            <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
	            <prop key="org.quartz.threadPool.threadCount">3</prop>
	            <prop key="org.quartz.threadPool.threadPriority">4</prop>
	            <prop key="org.quartz.jobStore.class">org.quartz.simpl.RAMJobStore</prop>
	            <prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
	        </props>
	    </property>
	</bean>
	 -->
</beans>


